---

groups:
  - name: haproxy-boshrelease
    jobs:
      - unit-tests
      - unit-tests-pr
      - testflight
      - testflight-pr
      - pre
      - rc
      - shipit
      - major
      - minor

jobs:
  - name: unit-tests
    public: true
    serial: true
    plan:
    - do:
      - get: git
        trigger: true
      - task: lint
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: iacbox.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git }
          caches:
          - path: git/vendor/cache
          - path: git/.bundle
          run:
            path: ./git/ci/scripts/lint
            args: []
          params:
            REPO_ROOT: git
      - task: unit-tests
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: iacbox.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git }

          caches:
          - path: git/vendor/cache
          - path: git/.bundle
          run:
            path: ./git/ci/scripts/unit-tests
            args: []
          params:
            REPO_ROOT: git
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) haproxy-boshrelease : unit-tests job failed"

  - name: unit-tests-pr
    public: true
    serial: true
    plan:
    - do:
      - { get: git-pull-requests, trigger: true, version: every }
      - put: git-pull-requests
        params:
          path: git-pull-requests
          status: pending
      - task: lint
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: iacbox.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git-pull-requests }
          caches:
          - path: git-pull-requests/vendor/cache
          - path: git-pull-requests/.bundle
          run:
            path: ./git-pull-requests/ci/scripts/lint
            args: []
          params:
            REPO_ROOT: git-pull-requests
      - task: unit-tests
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: iacbox.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git-pull-requests }
          caches:
          - path: git-pull-requests/vendor/cache
          - path: git-pull-requests/.bundle
          run:
            path: ./git-pull-requests/ci/scripts/unit-tests
            args: []
          params:
            REPO_ROOT: git-pull-requests

  - name: testflight
    public: true
    serial: true
    plan:
    - do:
      - in_parallel:
        - { get: git, trigger: true, passed: [unit-tests] }
        - { get: stemcell }
        - { get: bpm }
      - task: testflight
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: iacbox.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git }
            - { name: stemcell }
            - { name: bpm }
          run:
            path: ./git/ci/scripts/testflight
            args: []
          params:
            REPO_ROOT:            git
            AWS_ACCESS_KEY:       ((aws.access_key))
            AWS_SECRET_KEY:       ((aws.secret_key))
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) haproxy-boshrelease : testflight job failed"

  - name: testflight-pr
    public: true
    serial: true
    plan:
    - do:
      - { get: git-pull-requests, trigger: true, version: every, passed: [unit-tests-pr] }
      - { get: stemcell }
      - { get: bpm }
      - put: git-pull-requests
        params:
          path: git-pull-requests
          status: pending
          context: validate
      - task: testflight
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: iacbox.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git-pull-requests }
            - { name: stemcell }
            - { name: bpm }
          run:
            path: ./git-pull-requests/ci/scripts/testflight
            args: []
          params:
            REPO_ROOT:            git-pull-requests
            AWS_ACCESS_KEY:       ((aws.access_key))
            AWS_SECRET_KEY:       ((aws.secret_key))
        on_success:
          put: git-pull-requests
          params:
            path: git-pull-requests
            status: success
            context: validate
        on_failure:
          put: git-pull-requests
          params:
            path: git-pull-requests
            status: failure
            context: validate
      - task: pr-success-message
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: iacbox.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git-pull-requests }
          outputs:
            - { name: message }
          run:
            path: sh
            args:
            - -ce
            - |
              cd git-pull-requests
              pr_url=$(git config --get pullrequest.url)
              cd -
              echo "<${pr_url}|Pull request passed testflight> Merge when ready: ${pr_url}" > message/body

  - name: pre
    public: true
    serial: true
    plan:
    - do:
      - get: git
        passed:
        - testflight
        trigger: true
      - get: version
        trigger: true
      - task: release-notes
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: iacbox.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          run:
            path: sh
            args:
            - -ce
            - |
              cd git
              if [ -f ci/release_notes.md ]; then
                echo "######   RELEASE NOTES   ###############"
                echo
                cat ci/release_notes.md
                echo
                echo "########################################"
                echo
              else
                echo "NO RELEASE NOTES HAVE BEEN WRITTEN"
                echo "You *might* want to do that before"
                echo "hitting (+) on that shipit job..."
                echo
              fi
          inputs:
          - name: git
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text: release candidate job 'pre' failed (which is unusual).
          ok: false

  - name: rc
    public: true
    plan:
    - do:
      - in_parallel:
          - { get: git,     trigger: true,  passed: [pre] }
          - { get: version, trigger: false, params: {pre: rc} }
      - put: version
        params: {file: version/number}
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) haproxy-boshrelease : rc job failed"

  - name: minor
    public: true
    plan:
    - do:
      - { get: version, trigger: false, params: {bump: minor} }
      - { put: version,                 params: {file: version/number} }
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) haproxy-boshrelease : minor job failed"

  - name: major
    public: true
    plan:
    - do:
      - { get: version, trigger: false, params: {bump: major} }
      - { put: version,                 params: {file: version/number} }
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) haproxy-boshrelease : major job failed"

  - name: shipit
    public: true
    serial: true
    plan:
    - do:
      - in_parallel:
          - { get: version, passed: [rc], params: {bump: final} }
          - { get: git,     passed: [rc] }
      - task: release
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: iacbox.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - name: version
            - name: git
          outputs:
            - name: gh
            - name: pushme
            - name: notifications
          run:
            path: ./git/ci/scripts/shipit
            args: []
          params:
            REPO_ROOT:    git
            VERSION_FROM: version/number
            RELEASE_ROOT: gh
            REPO_OUT:     pushme
            NOTIFICATION_OUT: notifications
            BRANCH:        master
            GITHUB_OWNER:  cloudfoundry-incubator

            AWS_ACCESS_KEY: ((aws.access_key))
            AWS_SECRET_KEY: ((aws.secret_key))

      - put: git
        params:
          rebase: true
          repository: pushme/git
      - put: s3
        params:
          file:  "gh/artifacts/haproxy-*.tgz"
      - put: github
        params:
          name:   gh/name
          tag:    gh/tag
          body:   gh/notes.md
          globs: [gh/artifacts/*]
      - put: version
        params:
          bump: patch
      - put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text_file: notifications/message
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) haproxy-boshrelease : shipit job failed"

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

  - name: pull-request
    type: docker-image
    source:
      repository: jtarchie/pr

resources:
  - name: git
    type: git
    source:
      uri:         git@github.com:cloudfoundry-incubator/haproxy-boshrelease.git
      branch:      master
      private_key: ((github.private_key))

  - name: git-pull-requests
    type: pull-request
    source:
      access_token: ((github.access_token))
      private_key:  ((github.private_key))
      repo:         cloudfoundry-incubator/haproxy-boshrelease
      base:         master
      label:        approved

  - name: stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-xenial-go_agent

  - name: bpm
    type: bosh-io-release
    source:
      repository: cloudfoundry/bpm-release

  - name: version
    type: semver
    source :
      driver:            s3
      bucket:            cf-haproxy-boshrelease-pipeline
      region_name:       us-east-1
      key:               version
      access_key_id:     ((aws.access_key))
      secret_access_key: ((aws.secret_key))
      initial_version:   "0.0.1"

  - name: notify
    type: slack-notification
    source:
      url: ((slack.webhook))

  - name: github
    type: github-release
    source:
      user:         cloudfoundry-incubator
      repository:   haproxy-boshrelease
      access_token: ((github.access_token))

  - name: s3
    type: s3
    source:
      bucket:            cf-haproxy-boshrelease-pipeline
      region_name:       us-east-1
      regexp:            haproxy-(.*).tgz
      access_key_id:     ((aws.access_key))
      secret_access_key: ((aws.secret_key))
